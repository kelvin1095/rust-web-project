import{s as G,n as $}from"../chunks/scheduler.e8b33e29.js";import{S as I,i as L,g as x,s as b,h as m,x as N,c as C,j as k,f as _,k as p,a as v,C as J,D as B,E as M,F as D,y as S,m as K,B as Q,n as R,o as W,b as X,d as A,t as F,r as Y,u as Z,v as ee,G as te,w as le,p as ie}from"../chunks/index.b1dae435.js";import{e as E,u as ne,o as se}from"../chunks/each.ac538da7.js";function ae(r,t){const i=[];let n=0;function o(c,e){if(e===r){i.push({id:n++,played:!1,active:!1,card_description:c.slice()});return}for(let l=0;l<=t;l++)c[e]=l,o(c,e+1)}return o(new Array(r).fill(0),0),i}const re=4,oe=2,ce=ae(re,oe),de=()=>({deck:{shuffled_cards:ce}}),me=Object.freeze(Object.defineProperty({__proto__:null,load:de},Symbol.toStringTag,{value:"Module"}));function T(r,t,i){const n=r.slice();return n[6]=t[i],n}function q(r){let t,i,n,o,c;return{c(){t=B("svg"),i=B("use"),this.h()},l(e){t=M(e,"svg",{class:!0,stroke:!0,fill:!0});var l=k(t);i=M(l,"use",{"xlink:href":!0}),k(i).forEach(_),l.forEach(_),this.h()},h(){D(i,"xlink:href",n=r[3][r[0][3]]),p(t,"class","shape svelte-kjsxza"),p(t,"stroke",o=r[1][r[0][1]]),p(t,"fill",c=r[2][r[0][2]][r[0][1]])},m(e,l){v(e,t,l),S(t,i)},p(e,l){l&1&&n!==(n=e[3][e[0][3]])&&D(i,"xlink:href",n),l&1&&o!==(o=e[1][e[0][1]])&&p(t,"stroke",o),l&1&&c!==(c=e[2][e[0][2]][e[0][1]])&&p(t,"fill",c)},d(e){e&&_(t)}}}function he(r){let t,i='<div class="shapes"><svg id="diamond" viewBox="0 0 8 12" stroke-width="0.3"><polygon points="4,1 7,6 4,11 1,6 "></polygon></svg> <svg id="squiggle" viewBox="0 0 8 12" stroke-width="0.3"><path d="M6.3,2C6.3,1.4,6,0.9,5.5,0.5C4.7,0,3.6,0.2,3,1c-1.3,1.9-1.7,4-0.6,6c0.4,0.7,0.2,1.3-0.3,1.9c-0.6,0.7-0.5,1.8,0.2,2.5c0.7,0.6,1.8,0.5,2.5-0.2C6.3,9.4,6.6,7.3,5.5,5.3C5.1,4.5,5.4,3.7,6,3C6.2,2.7,6.3,2.3,6.3,2"></path></svg> <svg id="pill" viewBox="0 0 8 12" stroke-width="0.3"><path d="M2,3 v6 c0,1.1 0.9,2 2,2 h0 c1.1,0 2,-0.9 2,-2 V3 c0,-1.1 -0.9,-2 -2,-2 h0 C2.9,1 2,1.9 2,3 v0"></path></svg></div> <svg width="0" height="0"><defs><pattern id="stripes-c0" x="0" width="12" height="8" patternUnits="userSpaceOnUse" stroke="red" stroke-width="0.3" viewBox="0 0 12 8"><line x1="0" y1="1" x2="8" y2="1"></line><line x1="0" y1="2" x2="8" y2="2"></line><line x1="0" y1="3" x2="8" y2="3"></line><line x1="0" y1="4" x2="8" y2="4"></line><line x1="0" y1="5" x2="8" y2="5"></line><line x1="0" y1="6" x2="8" y2="6"></line><line x1="0" y1="7" x2="8" y2="7"></line><line x1="0" y1="8" x2="8" y2="8"></line><line x1="0" y1="9" x2="8" y2="9"></line><line x1="0" y1="10" x2="8" y2="10"></line><line x1="0" y1="11" x2="8" y2="11"></line></pattern><pattern id="stripes-c1" x="0" width="12" height="8" patternUnits="userSpaceOnUse" stroke="green" stroke-width="0.3"><line x1="0" y1="1" x2="8" y2="1"></line><line x1="0" y1="2" x2="8" y2="2"></line><line x1="0" y1="3" x2="8" y2="3"></line><line x1="0" y1="4" x2="8" y2="4"></line><line x1="0" y1="5" x2="8" y2="5"></line><line x1="0" y1="6" x2="8" y2="6"></line><line x1="0" y1="7" x2="8" y2="7"></line><line x1="0" y1="8" x2="8" y2="8"></line><line x1="0" y1="9" x2="8" y2="9"></line><line x1="0" y1="10" x2="8" y2="10"></line><line x1="0" y1="11" x2="8" y2="11"></line></pattern><pattern id="stripes-c2" x="0" width="12" height="8" patternUnits="userSpaceOnUse" stroke="purple" stroke-width="0.3"><line x1="0" y1="1" x2="8" y2="1"></line><line x1="0" y1="2" x2="8" y2="2"></line><line x1="0" y1="3" x2="8" y2="3"></line><line x1="0" y1="4" x2="8" y2="4"></line><line x1="0" y1="5" x2="8" y2="5"></line><line x1="0" y1="6" x2="8" y2="6"></line><line x1="0" y1="7" x2="8" y2="7"></line><line x1="0" y1="8" x2="8" y2="8"></line><line x1="0" y1="9" x2="8" y2="9"></line><line x1="0" y1="10" x2="8" y2="10"></line><line x1="0" y1="11" x2="8" y2="11"></line></pattern></defs></svg>',n,o,c=E({length:r[0][0]+1}),e=[];for(let l=0;l<c.length;l+=1)e[l]=q(T(r,c,l));return{c(){t=x("div"),t.innerHTML=i,n=b(),o=x("div");for(let l=0;l<e.length;l+=1)e[l].c();this.h()},l(l){t=m(l,"DIV",{class:!0,"data-svelte-h":!0}),N(t)!=="svelte-yl9709"&&(t.innerHTML=i),n=C(l),o=m(l,"DIV",{class:!0});var h=k(o);for(let s=0;s<e.length;s+=1)e[s].l(h);h.forEach(_),this.h()},h(){p(t,"class","helpers svelte-kjsxza"),p(o,"class","generated-card")},m(l,h){v(l,t,h),v(l,n,h),v(l,o,h);for(let s=0;s<e.length;s+=1)e[s]&&e[s].m(o,null)},p(l,[h]){if(h&15){c=E({length:l[0][0]+1});let s;for(s=0;s<c.length;s+=1){const a=T(l,c,s);e[s]?e[s].p(a,h):(e[s]=q(a),e[s].c(),e[s].m(o,null))}for(;s<e.length;s+=1)e[s].d(1);e.length=c.length}},i:$,o:$,d(l){l&&(_(t),_(n),_(o)),J(e,l)}}}function ue(r,t,i){let{data:n=[0,0,0,0]}=t,o=["none","none","none"],c=["red","green","purple"],l=[o,["url(#stripes-c0)","url(#stripes-c1)","url(#stripes-c2)"],c],h=["#diamond","#squiggle","#pill"];return r.$$set=s=>{"data"in s&&i(0,n=s.data)},[n,c,l,h]}class fe extends I{constructor(t){super(),L(this,t,ue,he,G,{data:0})}}function H(r,t,i){const n=r.slice();return n[5]=t[i],n}function z(r,t){let i,n,o,c,e,l,h;n=new fe({props:{data:t[5].card_description}});function s(){return t[4](t[5])}return{key:r,first:null,c(){i=x("button"),Y(n.$$.fragment),o=b(),this.h()},l(a){i=m(a,"BUTTON",{class:!0});var u=k(i);Z(n.$$.fragment,u),o=C(u),u.forEach(_),this.h()},h(){p(i,"class",c="card-in-play "+t[5].active+" svelte-1piihr0"),this.first=i},m(a,u){v(a,i,u),ee(n,i,null),S(i,o),e=!0,l||(h=te(i,"click",s),l=!0)},p(a,u){t=a;const y={};u&1&&(y.data=t[5].card_description),n.$set(y),(!e||u&1&&c!==(c="card-in-play "+t[5].active+" svelte-1piihr0"))&&p(i,"class",c)},i(a){e||(A(n.$$.fragment,a),e=!0)},o(a){F(n.$$.fragment,a),e=!1},d(a){a&&_(i),le(n),l=!1,h()}}}function _e(r){let t,i,n="Play a game of Set",o,c,e,l,h,s,a=[],u=new Map,y,w=E(r[0].filter(P).slice(0,12));const O=d=>d[5].id;for(let d=0;d<w.length;d+=1){let f=H(r,w,d),g=O(f);u.set(g,a[d]=z(g,f))}return{c(){t=b(),i=x("h1"),i.textContent=n,o=b(),c=x("div"),e=x("h1"),l=K(r[1]),h=b(),s=x("div");for(let d=0;d<a.length;d+=1)a[d].c();this.h()},l(d){Q("svelte-1c6tqk5",document.head).forEach(_),t=C(d),i=m(d,"H1",{class:!0,"data-svelte-h":!0}),N(i)!=="svelte-ddsjx2"&&(i.textContent=n),o=C(d),c=m(d,"DIV",{});var g=k(c);e=m(g,"H1",{class:!0});var U=k(e);l=R(U,r[1]),U.forEach(_),g.forEach(_),h=C(d),s=m(d,"DIV",{id:!0,class:!0});var V=k(s);for(let j=0;j<a.length;j+=1)a[j].l(V);V.forEach(_),this.h()},h(){document.title="Set Card Game",p(i,"class","svelte-1piihr0"),p(e,"class","svelte-1piihr0"),p(s,"id","game-grid"),p(s,"class","svelte-1piihr0")},m(d,f){v(d,t,f),v(d,i,f),v(d,o,f),v(d,c,f),S(c,e),S(e,l),v(d,h,f),v(d,s,f);for(let g=0;g<a.length;g+=1)a[g]&&a[g].m(s,null);y=!0},p(d,[f]){(!y||f&2)&&W(l,d[1]),f&5&&(w=E(d[0].filter(P).slice(0,12)),ie(),a=ne(a,f,O,1,d,w,u,s,se,z,null,H),X())},i(d){if(!y){for(let f=0;f<w.length;f+=1)A(a[f]);y=!0}},o(d){for(let f=0;f<a.length;f+=1)F(a[f]);y=!1},d(d){d&&(_(t),_(i),_(o),_(c),_(h),_(s));for(let f=0;f<a.length;f+=1)a[f].d()}}}function pe(r,t){if(r.length!==t.length)throw new Error("Vectors must have the same dimensions for component-wise addition.");const i=[];for(let n=0;n<r.length;n++)i.push((r[n]+t[n])%3);return i}const P=r=>r.played==!1;function ye(r,t,i){let{data:n}=t,o=n.deck.shuffled_cards,c="Select 3 cards";function e(h){o.filter(a=>a.id===h).map(a=>a.active=!a.active),i(0,o);let s=o.filter(a=>a.active===!0);s.length>=3&&(s.map(u=>u.card_description).reduce((u,y)=>pe(u,y),[0,0,0,0]).reduce((u,y)=>u+y,0)===0?(i(1,c="Set!"),o.filter(u=>u.active===!0).map(u=>{u.played=!0,u.active=!1})):(i(1,c="No Set"),o.filter(u=>u.active===!0).map(u=>u.active=!1)))}const l=h=>e(h.id);return r.$$set=h=>{"data"in h&&i(3,n=h.data)},[o,c,e,n,l]}class ke extends I{constructor(t){super(),L(this,t,ye,_e,G,{data:3})}}export{ke as component,me as universal};
