<script lang="ts">
  import type { PageData } from "./$types";
  export let data: PageData;

  // TO DO
  // New game button
  // Open 3 more cards button
  // End of game conditions

  function addVectors(vector1: number[], vector2: number[]) {
    if (vector1.length !== vector2.length) {
      throw new Error(
        "Vectors must have the same dimensions for component-wise addition."
      );
    }

    const result = [];

    for (let i = 0; i < vector1.length; i++) {
      result.push((vector1[i] + vector2[i]) % 3);
    }

    return result;
  }

  let card_information = data.deck.shuffled_cards;
  let last_information = "Select 3 cards";

  function increment(id: number) {
    card_information
      .filter((card) => card.id === id)
      .map((card) => (card.active = !card.active));
    card_information = card_information;

    // console.log(card_information);

    let cards_selected = card_information.filter(
      (card) => card.active === true
    );

    // console.log(number_selected);

    if (cards_selected.length >= 3) {
      let match_condition = cards_selected
        .map((card) => card.card_description)
        .reduce(
          (acc, card_description) => addVectors(acc, card_description),
          [0, 0, 0, 0]
        )
        .reduce((accumulator, currentValue) => accumulator + currentValue, 0);

      //   console.log(match_condition);

      if (match_condition === 0) {
        last_information = "Set!";
        card_information
          .filter((card) => card.active === true)
          .map((card) => {
            card.played = true;
            card.active = false;
          });
      } else {
        last_information = "No Set";
        card_information
          .filter((card) => card.active === true)
          .map((card) => (card.active = false));
      }
    }
  }
</script>

<svelte:head>
  <title>Set Card Game</title>
</svelte:head>

<h1>Play a game of Set</h1>

<div>
  <h1>{last_information}</h1>
</div>

<div class="helpers">
  <div class="shapes">
    <svg
      id="diamond"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 12 8"
    >
      <polygon points="1,4 6,7 11,4 6,1 " />
    </svg>

    <svg
      id="tilde"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 12 8"
    >
      <path
        d="M2,6.3C1.4,6.3,0.9,6,0.5,5.5C0,4.7,0.2,3.6,1,3c1.9-1.3,4-1.7,6-0.6c0.7,0.4,1.3,0.2,1.9-0.3c0.7-0.6,1.8-0.5,2.5,0.2
                c0.6,0.7,0.5,1.8-0.2,2.5C9.4,6.3,7.3,6.6,5.3,5.5C4.5,5.1,3.7,5.4,3,6C2.7,6.2,2.3,6.3,2,6.3z"
      />
    </svg>

    <svg
      id="pill"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 12 8"
    >
      <path
        d="M3,2h6c1.1,0,2,0.9,2,2v0c0,1.1-0.9,2-2,2H3C1.9,6,1,5.1,1,4v0C1,2.9,1.9,2,3,2z"
      />
    </svg>
  </div>

  <svg width="0" height="0">
    <defs>
      <pattern
        id="stripes-c0"
        x="0"
        width="12"
        height="8"
        patternUnits="userSpaceOnUse"
        stroke="red"
        stroke-width=".3"
        viewBox="0 0 12 8"
      >
        <line x1="1" y1="0" x2="1" y2="8" />
        <line x1="2.2" y1="0" x2="2.2" y2="8" />
        <line x1="3.5" y1="0" x2="3.5" y2="8" />
        <line x1="4.8" y1="0" x2="4.8" y2="8" />
        <line x1="6" y1="0" x2="6" y2="8" />
        <line x1="11" y1="0" x2="11" y2="8" />
        <line x1="8.5" y1="0" x2="8.5" y2="8" />
        <line x1="7.2" y1="0" x2="7.2" y2="8" />
        <line x1="9.8" y1="0" x2="9.8" y2="8" />
      </pattern>
      <pattern
        id="stripes-c1"
        x="0"
        width="12"
        height="8"
        patternUnits="userSpaceOnUse"
        stroke="green"
        stroke-width=".3"
      >
        <line x1="1" y1="0" x2="1" y2="8" />
        <line x1="2.2" y1="0" x2="2.2" y2="8" />
        <line x1="3.5" y1="0" x2="3.5" y2="8" />
        <line x1="4.8" y1="0" x2="4.8" y2="8" />
        <line x1="6" y1="0" x2="6" y2="8" />
        <line x1="11" y1="0" x2="11" y2="8" />
        <line x1="8.5" y1="0" x2="8.5" y2="8" />
        <line x1="7.2" y1="0" x2="7.2" y2="8" />
        <line x1="9.8" y1="0" x2="9.8" y2="8" />
      </pattern>
      <pattern
        id="stripes-c2"
        x="0"
        width="12"
        height="8"
        patternUnits="userSpaceOnUse"
        stroke="purple"
        stroke-width=".3"
      >
        <line x1="1" y1="0" x2="1" y2="8" />
        <line x1="2.2" y1="0" x2="2.2" y2="8" />
        <line x1="3.5" y1="0" x2="3.5" y2="8" />
        <line x1="4.8" y1="0" x2="4.8" y2="8" />
        <line x1="6" y1="0" x2="6" y2="8" />
        <line x1="11" y1="0" x2="11" y2="8" />
        <line x1="8.5" y1="0" x2="8.5" y2="8" />
        <line x1="7.2" y1="0" x2="7.2" y2="8" />
        <line x1="9.8" y1="0" x2="9.8" y2="8" />
      </pattern>
    </defs>
  </svg>
</div>

<div id="example-card">
  <svg
    class="card"
    height="100%"
    width="30%"
    stroke="red"
    fill="transparent"
    stroke-width="0.3"
    transform="rotate(90)"
  >
    <use xlink:href="#pill" />
  </svg>

  <svg
    class="card"
    height="100%"
    width="30%"
    fill="url(#stripes-c0)"
    stroke-width="0.3"
    transform="rotate(90)"
  >
    <use xlink:href="#pill" />
  </svg>

  <svg
    class="card"
    height="100%"
    width="30%"
    stroke="red"
    fill="red"
    stroke-width="0.3"
    transform="rotate(90)"
  >
    <use xlink:href="#pill" />
  </svg>
</div>

<div id="game-grid">
  {#each card_information
    .filter((card) => card.played == false)
    .slice(0, 12) as card (card.id)}
    <button
      class="card-in-play {card.active}"
      on:click={() => increment(card.id)}
    >
      {card.id}: [{card.card_description}]
    </button>
  {/each}
</div>

<style>
  h1 {
    text-align: center;
  }

  #game-grid {
    display: grid;
    border-style: solid;
    border-width: 2px;
    padding: 4px;
    grid-template-columns: repeat(3, 1fr);
    gap: 6px;
  }

  .card-in-play {
    background-color: white;
    border-style: dashed;
    border-radius: 20px;
    border-width: 2px;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 150px;
  }

  .true {
    background-color: azure;
  }

  .helpers {
    height: 0;
    width: 0;
  }

  #example-card {
    border-style: groove;
    display: flex;
    justify-content: center;
    height: 140px;
    width: 215px;
  }

  .card {
    stroke: red;
  }
</style>
